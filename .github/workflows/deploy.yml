name: Deploy website to GitHub Pages

env:
  WC_HUGO_VERSION: '0.148.2'
  NODE_VERSION: '20'

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    if: github.repository_owner != 'HugoBlox'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        if: hashFiles('package.json') != ''
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: |
          if [ -f "package.json" ]; then
            echo "Installing Tailwind dependencies..."
            pnpm install || npm install
          fi

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.WC_HUGO_VERSION }}
          extended: true

      # Cache dependencies (Go modules, node_modules)
      - uses: actions/cache@v4
        with:
          path: |
            /tmp/hugo_cache_runner/
            node_modules/
            modules/*/node_modules/
          key: ${{ runner.os }}-hugo-deps-${{ hashFiles('**/go.mod', '**/package-lock.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-hugo-deps-

      # Cache Hugo resources (processed images, CSS)
      - uses: actions/cache@v4
        with:
          path: resources/
          key: ${{ runner.os }}-hugo-resources-${{ hashFiles('assets/**/*', 'config/**/*', 'hugo.yaml', 'package.json') }}
          restore-keys: |
            ${{ runner.os }}-hugo-resources-

      # -------------------------------
      # Build Hugo site and Tailwind CSS
      # -------------------------------
      - name: Build Hugo & Recompile Tailwind CSS
        run: |
          # Install pnpm globally
          npm install -g pnpm
          
          # Build Hugo first to generate hugo_stats.json
          hugo
          
          # Vendor Hugo modules (creates _vendor folder)
          hugo mod vendor
          
          # Go into HugoBlox Tailwind module
          cd ./_vendor/github.com/HugoBlox/hugo-blox-builder/modules/blox-tailwind/
          
          # Install Tailwind dependencies
          pnpm i
          
          # Set Tailwind content path
          export HB_TW_CONTENT='../../../../../../hugo_stats.json'
          
          # Compile Tailwind CSS (input -> output)
          npx tailwindcss -i ./assets/css/styles.css \
            --config ./tailwind.config.js \
            -o ../../../../../../assets/dist/wc.min.css \
            --minify --postcss
          
          # Return to root and clean _vendor
          cd ../../../../../../
          rm -rf _vendor

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Hugo (final)
        env:
          HUGO_ENVIRONMENT: production
        run: |
          echo "Hugo Cache Dir: $(hugo config | grep cachedir)"
          hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Generate Pagefind search index (if applicable)
        run: |
          if [ -f "package.json" ] && grep -q "pagefind" package.json; then
            pnpm dlx pagefind --source "public" || npx pagefind --source "public"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./public

  deploy:
    if: github.repository_owner != 'HugoBlox'
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
